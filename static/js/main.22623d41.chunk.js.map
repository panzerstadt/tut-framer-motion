{"version":3,"sources":["components/D.module.css","components/Five.module.css","components/One.module.css","logo.svg","components/useInterval.js","components/D.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","top","bottom","right","left","container","vertical","semicircle","box","rectangle","__webpack_require__","p","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","rand","ceiling","arguments","length","undefined","Math","round","random","Vertical","_ref","tick","_useState","useState","_useState2","Object","slicedToArray","clickCount","setClickCount","variants","zero","borderRadius","backgroundColor","x","y","rotate","height","one","two","three","react_default","a","createElement","framer_motion_es","div","className","styles","animate","type","keys","getVariant","onClick","SemiCircle","_ref2","_useState3","_useState4","Slider","slider","D","dRef","_useState5","_useState6","setTick","_useState7","_useState8","anim","setAnim","handleMouseEnter","handleMouseLeave","el","addEventListener","passive","removeEventListener","Fragment","ref","D_Vertical","D_SemiCircle","D_Slider","App","components_D","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22623d41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"D_top__2hDlW\",\"bottom\":\"D_bottom__3QKvE\",\"right\":\"D_right__3hzuo\",\"left\":\"D_left__268Aj\",\"container\":\"D_container__3y_0b\",\"vertical\":\"D_vertical__3cflf\",\"semicircle\":\"D_semicircle__3zLtv D_right__3hzuo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Five_container__Dga18\",\"box\":\"Five_box__21Psu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rectangle\":\"One_rectangle__UXmTf\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport styles from \"./D.module.css\";\n\nimport useInterval from \"./useInterval\";\n\nconst rand = (ceiling = 10) => Math.round(Math.random() * ceiling);\n\nconst Vertical = ({ tick }) => {\n  const [clickCount, setClickCount] = useState(0);\n  useEffect(() => {\n    setClickCount(tick);\n  }, [tick]);\n\n  const variants = {\n    zero: {\n      borderRadius: 0,\n      backgroundColor: \"#FFFFFF\",\n      x: 0,\n      y: 0,\n      rotate: 0,\n      height: 200\n    },\n    one: {\n      borderRadius: 10,\n      backgroundColor: \"#F9DC5C\",\n      x: 0,\n      y: 80,\n      rotate: 30,\n      height: 50\n    },\n    two: {\n      borderRadius: rand(),\n      backgroundColor: \"#7F63BD\",\n      x: 55,\n      y: 35,\n      rotate: 170,\n      height: 300\n    },\n    three: {\n      borderRadius: rand(),\n      backgroundColor: \"#EDD3C4\",\n      y: 10,\n      x: 30,\n      rotate: 90,\n      height: 100\n    }\n  };\n\n  const getVariant = type => {\n    type = type % Object.keys(variants).length;\n    switch (type) {\n      case 0:\n        return \"zero\";\n      case 1:\n        return \"one\";\n      case 2:\n        return \"two\";\n      case 3:\n        return \"three\";\n      default:\n        return \"one\";\n    }\n  };\n\n  const handleClick = () => {\n    setClickCount(p => {\n      if (p >= 3) return 0;\n      return p + 1;\n    });\n  };\n  return (\n    <motion.div\n      className={styles.vertical}\n      variants={variants}\n      animate={getVariant(clickCount)}\n      onClick={handleClick}\n    />\n  );\n};\n\nconst SemiCircle = ({ tick }) => {\n  const [clickCount, setClickCount] = useState(0);\n  useEffect(() => {\n    setClickCount(tick);\n  }, [tick]);\n\n  const variants = {\n    zero: {\n      borderRadius: 0,\n      x: 0,\n      y: 0,\n      backgroundColor: \"#EDD3C4\",\n      rotate: 0\n    },\n    one: {\n      borderRadius: rand(),\n\n      backgroundColor: \"#7F63BD\",\n      x: 0,\n      y: 80,\n      rotate: 100\n    },\n    two: {\n      borderRadius: rand(),\n\n      backgroundColor: \"#E52249\",\n      x: 55,\n      y: 35,\n      rotate: -10\n    },\n    three: {\n      borderRadius: rand(),\n\n      backgroundColor: \"#F9DC5C\",\n      y: 10,\n      x: 30,\n      rotate: -80\n    }\n  };\n\n  const getVariant = type => {\n    type = type % Object.keys(variants).length;\n    switch (type) {\n      case 0:\n        return \"zero\";\n      case 1:\n        return \"one\";\n      case 2:\n        return \"two\";\n      case 3:\n        return \"three\";\n      default:\n        return \"one\";\n    }\n  };\n\n  const handleClick = () => {\n    setClickCount(p => {\n      if (p >= 3) return 0;\n      return p + 1;\n    });\n  };\n  return (\n    <motion.div\n      className={styles.semicircle}\n      variants={variants}\n      animate={getVariant(clickCount)}\n      onClick={handleClick}\n    />\n  );\n};\n\nconst Slider = () => {\n  return <motion.div className={styles.slider} />;\n};\n\nconst D = () => {\n  const dRef = useRef();\n  const [tick, setTick] = useState(0);\n  const [anim, setAnim] = useState(true);\n  useInterval(\n    () => {\n      setTick(p => p + 1);\n    },\n    anim ? 1200 : null\n  );\n\n  const handleMouseEnter = () => {\n    setAnim(false);\n  };\n\n  const handleMouseLeave = () => {\n    setAnim(true);\n  };\n\n  useEffect(() => {\n    if (dRef && dRef.current) {\n      const el = dRef.current;\n      el.addEventListener(\"mouseenter\", handleMouseEnter, { passive: true });\n      el.addEventListener(\"mouseleave\", handleMouseLeave, { passive: true });\n    }\n\n    return () => {\n      const el = dRef && dRef.current;\n      el.removeEventListener(\"mouseenter\", handleMouseEnter, { passive: true });\n      el.removeEventListener(\"mouseleave\", handleMouseLeave, { passive: true });\n    };\n  }, [dRef]);\n\n  return (\n    <>\n      <div ref={dRef} className={styles.container}>\n        <Vertical tick={tick} />\n        <SemiCircle tick={tick} />\n      </div>\n      <Slider />\n    </>\n  );\n};\n\nexport default D;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport One from \"./components/One\";\nimport Five from \"./components/Five\";\nimport D from \"./components/D\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <D />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}